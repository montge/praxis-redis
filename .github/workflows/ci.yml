name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.12"
  REDIS_PASSWORD: test_password_for_ci
  REDIS_PORT: 6379
  REDIS_HOST: localhost

jobs:
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Black formatter check
        run: |
          black --check --diff .

      - name: Run Ruff linter
        run: |
          ruff check .

      - name: Run MyPy type checker
        run: |
          mypy scripts/ --ignore-missing-imports
        continue-on-error: true

  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          pytest tests/unit -v --cov=scripts --cov-report=xml --cov-report=term-missing -m unit

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests
          name: unit-tests
        continue-on-error: true

  test-integration:
    name: Integration Tests
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis/redis-stack:latest
        ports:
          - 6379:6379
          - 8001:8001
        env:
          REDIS_ARGS: --requirepass test_password_for_ci
          REDISEARCH_ARGS: MAXSEARCHRESULTS 10000
        options: >-
          --health-cmd "redis-cli -a test_password_for_ci ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run integration tests
        run: |
          pytest tests/integration -v --cov=scripts --cov-report=xml --cov-report=term-missing -m integration

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: integration
          name: integration-tests
        continue-on-error: true

  test-e2e:
    name: End-to-End Tests
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis/redis-stack:latest
        ports:
          - 6379:6379
          - 8001:8001
        env:
          REDIS_ARGS: --requirepass test_password_for_ci
          REDISEARCH_ARGS: MAXSEARCHRESULTS 10000
        options: >-
          --health-cmd "redis-cli -a test_password_for_ci ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run end-to-end tests
        run: |
          pytest tests/e2e -v --cov=scripts --cov-report=xml --cov-report=term-missing -m e2e

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: e2e
          name: e2e-tests
        continue-on-error: true

  test-all:
    name: All Tests (Combined Coverage)
    runs-on: ubuntu-latest
    needs: [lint]

    services:
      redis:
        image: redis/redis-stack:latest
        ports:
          - 6379:6379
          - 8001:8001
        env:
          REDIS_ARGS: --requirepass test_password_for_ci
          REDISEARCH_ARGS: MAXSEARCHRESULTS 10000
        options: >-
          --health-cmd "redis-cli -a test_password_for_ci ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run all tests
        run: |
          pytest -v --cov=scripts --cov-report=xml --cov-report=html --cov-report=term-missing

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: all-tests
          name: all-tests-coverage
        continue-on-error: true

      - name: Archive coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
          retention-days: 30
